#Saccade detection with the gaze generated by Pylids
import matplotlib.pyplot as plt 
from eye_head_class import eyeHead
from numpy import mean
from scipy.signal import savgol_filter
"""
x = 67.5"
y = 43"
z = 29.25"
horizontal FOV = 98 deg
vertical FOV = 72 deg
"""
class saccadeDetect(eyeHead):
    def __init__(self):
        super().__init__()
        print('Instantiate saccadeDetect object')
        self.fov_horiz = 98 #deg 
        self.fov_vertical = 72 #deg
    def get_gaze(self):
        print(self.input_folder)
        self.eye_utils()
        self.calibration_markers_find()
        self.load_pylids()
        self.calculate_calibration()
        self.validation_markers_calc()
        self.gaze = self.gaze_calc()
    def convert_norm_pos_to_degrees(self):
        """
        Should I do a mean offset?
        """
        self.gaze['left']['norm_pos'][:,0] = self.gaze['left']['norm_pos'][:,0] * self.fov_horiz
        self.gaze['right']['norm_pos'][:,0] = self.gaze['right']['norm_pos'][:,0] * self.fov_horiz
        self.gaze['left']['norm_pos'][:,1] = self.gaze['left']['norm_pos'][:,1] * self.fov_vertical
        self.gaze['right']['norm_pos'][:,1] = self.gaze['right']['norm_pos'][:,1] * self.fov_vertical
        # plt.scatter(self.gaze['left']['norm_pos'][:,0],self.gaze['left']['norm_pos'][:,1],label='left eye')
        # plt.scatter(self.gaze['right']['norm_pos'][:,0],self.gaze['right']['norm_pos'][:,1],label='right eye')
        # plt.legend()
        # plt.show()
    def filter_data(self):
        self.gaze['left']['norm_pos'][:,0] = savgol_filter(self.gaze['left']['norm_pos'][:,0],
                                                           polyorder=3,window_length=21)
        self.gaze['right']['norm_pos'][:,0] = savgol_filter(self.gaze['right']['norm_pos'][:,0],
                                                           polyorder=3,window_length=21)
        self.gaze['left']['norm_pos'][:,1] = savgol_filter(self.gaze['left']['norm_pos'][:,1],
                                                           polyorder=3,window_length=21)
        self.gaze['right']['norm_pos'][:,1] = savgol_filter(self.gaze['right']['norm_pos'][:,1],
                                                           polyorder=3,window_length=21)
        plt.scatter(self.gaze['left']['norm_pos'][:,0],self.gaze['left']['norm_pos'][:,1],label='left eye')
        plt.scatter(self.gaze['right']['norm_pos'][:,0],self.gaze['right']['norm_pos'][:,1],label='right eye')
        plt.legend()
        plt.show()
    def saccade_thresholding(self):
        """
        Use onset offset saccade thresholding and plot the method
        """
        pass
    def run_analysis(self):
        self.get_gaze()
        self.convert_norm_pos_to_degrees()
        self.filter_data()
        self.saccade_thresholding

def main():
    saccadeDetect().run_analysis()
if __name__ == "__main__":
    main()